// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Saggi_timesheet_API.Data;

#nullable disable

namespace Saggi_timesheet_API.Migrations
{
    [DbContext(typeof(SaggiTSDbContext))]
    partial class SaggiTSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Saggi_timesheet_API.Models.Approval", b =>
                {
                    b.Property<int>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalId"), 1L, 1);

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApproverUserId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSheetId")
                        .HasColumnType("int");

                    b.HasKey("ApprovalId");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("TimeSheetId");

                    b.ToTable("Approval");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectManagerId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.TimeSheet", b =>
                {
                    b.Property<int>("TimeSheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSheetId"), 1L, 1);

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WeekStarting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TimeSheetId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeSheet");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.TimesheetEntry", b =>
                {
                    b.Property<int>("TimeSheetEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSheetEntryId"), 1L, 1);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSheetId")
                        .HasColumnType("int");

                    b.HasKey("TimeSheetEntryId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TimeSheetId");

                    b.ToTable("TimesheetEntry");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.Approval", b =>
                {
                    b.HasOne("Saggi_timesheet_API.Models.User", "ApproverUser")
                        .WithMany("Approvals")
                        .HasForeignKey("ApproverUserId");

                    b.HasOne("Saggi_timesheet_API.Models.TimeSheet", "TimeSheet")
                        .WithMany("Approvals")
                        .HasForeignKey("TimeSheetId");

                    b.Navigation("ApproverUser");

                    b.Navigation("TimeSheet");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.Project", b =>
                {
                    b.HasOne("Saggi_timesheet_API.Models.User", "ProjectManager")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectManagerId");

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.TimeSheet", b =>
                {
                    b.HasOne("Saggi_timesheet_API.Models.User", "User")
                        .WithMany("TimeSheets")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.TimesheetEntry", b =>
                {
                    b.HasOne("Saggi_timesheet_API.Models.Project", "Project")
                        .WithMany("TimeSheetEntries")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Saggi_timesheet_API.Models.TimeSheet", "TimeSheet")
                        .WithMany("TimeSheetEntries")
                        .HasForeignKey("TimeSheetId");

                    b.Navigation("Project");

                    b.Navigation("TimeSheet");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.User", b =>
                {
                    b.HasOne("Saggi_timesheet_API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.Project", b =>
                {
                    b.Navigation("TimeSheetEntries");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.TimeSheet", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("TimeSheetEntries");
                });

            modelBuilder.Entity("Saggi_timesheet_API.Models.User", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Projects");

                    b.Navigation("TimeSheets");
                });
#pragma warning restore 612, 618
        }
    }
}
